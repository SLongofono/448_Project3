Product BackLog (10/17 - Semester close)
	Sprint 1
	Sprint 2
		Extract user profile data to a database
			Adapt all setup methods to interact with SQLite
			Adapt User class methods to interact with SQLite

		Further develop the user profile as its own object
			Write methods to calculate and preserved standard deviation of numerical features
			Write methods and structures to hold weighting of features
	
		Begin Writing testing suite
			Research sane ways to test recommendation
			Write testers for all methods
			Write testers for all classes
			Write testers for mutators
			Write testers for standard deviation methods


	Final Sprint
		Further develop intelligent reccommendations
			Write methods to adjust weighting as new songs are added to the profile database
			Write methods to automatically reject new songs beyond so many standard deviations
			Write methods to gauge how new songs mutate the profile, adjust weights accordingly
			Refine where songs to be recommended come from on Spotify

		Finish testing suite
			Figure out how to "reset" an account for continual testing from scratch
			Write in ways to test recommendation
			

		Write code to automate the whole process, adding songs at regular intervals of time

		Write code to automate the process of updating the user profile

	


Sprint Backlog (10/17 - 11/2)
	Research viability of machine learning using the Spotify API
	Research Spotify developer accounts
	Verify that we can setup and access the SPI through Spotipy
	Run through tutorials to access user profile
	Write Setup program to aggregate song features we care about from the spotify library
	Write setup program to create an average user profile
	Write a User class with which to manipulate and interact with the user profile
	Write mutator functions for user profile for quick manipulation and evaluation of results
	Write a program to compare any two given vectors and quantify their similarity
	Write a program to fetch new songs from Spotify to compare with the user profile
	Write a simple program to fetch songs, rank them by similarity to profile, and display the results
	Documentation - Required files and artifacts
	Documentation - code comments and Doxygen
	Documentation - setup instructions